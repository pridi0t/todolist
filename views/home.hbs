<div>
    <h2>TODOLIST</h2>
    <h3>20xx.xx.xx</h3>
    <div>40%</div>
    <div>
        <select id="todoPriority">
            <option value="0">높음</option>
            <option value="1">보통</option>
            <option value="2">낮음</option>
        </select>
        <input type="text" id="todo" placeholder="할 일 입력">
        <button type="button" onclick="addList()">추가</button>
    </div>
    <ul>
        {{#each list}}
        <li>
            <button type="button">{{convertPriority todoPriority}}</button>
            <input type="text" value="{{todo}}" onchange="updateTodo('{{_id}}', '{{todo}}', this)">
            <button type="button" onclick="deleteList('{{todo}}', '{{todoPriority}}')">삭제</button>
            <input type="checkbox">
        </li>
        {{/each}}
    </ul>
</div>

<script>
    /* 할 일 추가 */
    const postOption = {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        }
    }

    async function addList() {
        const todo = document.getElementById('todo').value;
        const todoPriority = document.getElementById('todoPriority').value;

        if (!todo) {
            alert("할 일을 입력해주세요");
            return;
        }

        await fetch("/list", {
            ...postOption,
            body: JSON.stringify({ todo, todoPriority })
        })
            .then((res) => {
                if (!res.ok) {
                    alert("할 일을 추가하지 못했습니다");
                } else {
                    alert("할 일이 추가되었습니다");
                    document.location.reload();
                }
            });
    }

    /* 할 일 수정 */
    const updateOption = {
        method: 'PATCH',
        headers: {
            'Content-Type': 'application/json'
        }
    }

    async function updateTodo(id, before, after) {
        if (!after.value) {
            after.value = before;
            return ;
        }

        await fetch("/list-todo", {
            ...updateOption,
            body: JSON.stringify({ id, todo: after.value })
        })
            .then((res) => {
                if (!res.ok) {
                    alert("할 일을 수정하지 못했습니다");
                } else {
                    document.location.reload();
                }
            });
    }

    /* 할 일 삭제 */
    const deleteOption = {
        method: 'DELETE',
        headers: {
            'Content-Type': 'application/json'
        }
    }

    async function deleteList(todo, todoPriority) {
        await fetch("/list", {
            ...deleteOption,
            body: JSON.stringify({ todo, todoPriority })
        })
            .then((res) => {
                if (!res.ok) {
                    alert("할 일을 삭제하지 못했습니다");
                } else {
                    alert("할 일이 삭제되었습니다");
                    document.location.reload();
                }
            });
    }
</script>